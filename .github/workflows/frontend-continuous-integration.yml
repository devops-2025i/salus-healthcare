name: Frontend Continuous Integration

on:
  push:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-continuous-integration.yml'
    branches: [ main, master, develop ]
  pull_request:
    paths:
      - 'frontend/**'
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test_and_lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run ESLint
        run: npm run lint
        working-directory: ./frontend

      - name: Run tests with coverage
        run: npm run test
        working-directory: ./frontend

      - name: Create test summary
        run: |
          echo "## Test Results Summary ðŸ“Š" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… **Linting**: Passed" >> $GITHUB_STEP_SUMMARY
          echo "âœ… **Tests**: Completed with coverage report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“ˆ **Coverage Report**: Available in artifacts and GitHub Pages" >> $GITHUB_STEP_SUMMARY

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: ./frontend/coverage/
          retention-days: 30

  deploy-results:
    runs-on: ubuntu-latest
    needs: test_and_lint
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: frontend-coverage-report
          path: artifact
      - run: |
          rm -rf pages
          mkdir -p pages/frontend
          cp -r artifact/* pages/frontend/
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAGES_TOKEN }}
          publish_dir: pages
          publish_branch: gh-pages
          keep_files: true

  build:
    runs-on: ubuntu-latest
    needs: test_and_lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run linter
        run: npm run lint
        working-directory: ./frontend

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          load: true
          tags: salus-frontend:latest
