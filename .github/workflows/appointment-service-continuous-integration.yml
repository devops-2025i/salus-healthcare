name: Appointment Service Continuous Integration

on:
  push:
    paths:
      - 'appointment-service/**'
      - '.github/workflows/appointment-service-continuous-integration.yml'
  pull_request:
    paths:
      - 'appointment-service/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - run: |
          cd appointment-service
          uv venv
          uv pip install -r requirements.txt
      - run: |
          cd appointment-service
          uv run flake8 . --count --select=E9,F63,F7,F82 --ignore=F821,F824 --show-source --statistics --exclude=.venv
          uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics --exclude=.venv

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - run: |
          cd appointment-service
          uv venv
          uv pip install -r requirements.txt pytest-html
      - run: |
          cd appointment-service
          uv run pytest service_test.py -v --tb=short \
            --junit-xml=pytest-results.xml \
            --html=report.html --self-contained-html
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-xml
          path: appointment-service/pytest-results.xml
          if-no-files-found: warn
      - uses: actions/upload-artifact@v4
        with:
          name: report-html
          path: appointment-service/report.html

  deploy-results:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: report-html
          path: artifact
      - run: |
          rm -rf pages
          mkdir -p pages/appointment-service
          cp artifact/report.html pages/appointment-service/report.html
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAGES_TOKEN }}
          publish_dir: pages
          publish_branch: gh-pages
          keep_files: true
